{"mappings":"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","sources":["src/js/pagination.js"],"sourcesContent":["const refs = {\n  paginationBtn: document.querySelector('.pagination-buttons'),\n};\n\nconst pageNumbers = (total, max, current) => {\n  const half = Math.floor(max / 2);\n  let to = max;\n\n  if (current + half >= total) {\n    to = total;\n  } else if (current > half) {\n    to = current + half;\n  }\n\n  let from = Math.max(to - max, 0);\n\n  return Array.from({ length: Math.min(total, max) }, (_, i) => i + 1 + from);\n};\n\nfunction createPagination(\n  totalPages = 50,\n  maxPagesVisible = 5,\n  currentPage = 1\n) {\n  let pages = pageNumbers(totalPages, maxPagesVisible, currentPage);\n  let currentPageBtn = null;\n  const buttons = new Map();\n\n  const disabled = {\n    start: () => pages[0] === 1,\n    prev: () => currentPage === 1 || currentPage > totalPages,\n    end: () => pages.slice(-1)[0] === totalPages,\n    next: () => currentPage >= totalPages,\n  };\n  const frag = document.createDocumentFragment();\n  const paginationButtonContainer = document.createElement('div');\n\n  paginationButtonContainer.className = 'pagination-buttons';\n\n  const render = (container = document.body) => {\n    container.appendChild(paginationButtonContainer);\n  };\n  const update = (newPageNumber = currentPage) => {\n    currentPage = newPageNumber;\n    pages = pageNumbers(totalPages, maxPagesVisible, currentPage);\n    buttons.forEach((updateButton, btn) => updateButton(btn));\n  };\n\n  const onChange = handler => {\n    paginationButtonContainer.addEventListener('change', handler);\n  };\n\n  const createAndSetupButton = (\n    label = '',\n    cls = '',\n    disabled = false,\n    handleClick\n  ) => {\n    // refs.paginationBtn = buttonElement;\n    refs.paginationBtn = document.createElement('button');\n    refs.paginationBtn.textContent = label;\n    refs.paginationBtn.className = `page-btn ${cls}`;\n    refs.paginationBtn.disabled = disabled;\n    refs.paginationBtn.addEventListener('click', e => {\n      handleClick(e);\n      update();\n      paginationButtonContainer.value = currentPage;\n      paginationButtonContainer.dispatchEvent(\n        new CustomEvent('change', { detail: { currentPageBtn } })\n      );\n    });\n\n    return refs.paginationBtn;\n  };\n\n  const onPageButtonClick = e =>\n    (currentPage = Number(e.currentTarget.textContent));\n\n  const onPageButtonUpdate = index => btn => {\n    btn.textContent = pages[index];\n\n    if (pages[index] === currentPage) {\n      currentPageBtn.classList.remove('btn-active');\n      btn.classList.add('btn-active');\n      currentPageBtn = btn;\n      currentPageBtn.focus();\n    }\n  };\n\n  buttons.set(\n    createAndSetupButton(\n      'start',\n      'start-page',\n      disabled.start(),\n      () => (currentPage = 1)\n    ),\n    btn => (btn.disabled = disabled.start())\n  );\n\n  buttons.set(\n    createAndSetupButton(\n      '<<<',\n      'prev-page',\n      disabled.prev(),\n      () => (currentPage -= 1)\n    ),\n    btn => (btn.disabled = disabled.prev())\n  );\n\n  pages.map((pageNumber, index) => {\n    const isCurrentPage = currentPage === pageNumber;\n    const button = createAndSetupButton(\n      pageNumber,\n      isCurrentPage ? 'btn-active' : '',\n      false,\n      onPageButtonClick\n    );\n\n    if (isCurrentPage) {\n      currentPageBtn = button;\n    }\n\n    buttons.set(button, onPageButtonUpdate(index));\n  });\n\n  buttons.set(\n    createAndSetupButton(\n      '>>>',\n      'next-page',\n      disabled.next(),\n      () => (currentPage += 1)\n    ),\n    btn => (btn.disabled = disabled.next())\n  );\n\n  buttons.set(\n    createAndSetupButton(\n      'end',\n      'end-page',\n      disabled.end(),\n      () => (currentPage = totalPages)\n    ),\n    btn => (btn.disabled = disabled.end())\n  );\n\n  buttons.forEach((_, btn) => frag.appendChild(btn));\n  paginationButtonContainer.appendChild(frag);\n\n  return {\n    render,\n    update,\n    onChange,\n  };\n}\n\nconst paginationButtons = createPagination(50, 10, 1);\n\npaginationButtons.render(document.querySelector('.pagination-wrapper'));\n\npaginationButtons.onChange(e => {\n  console.log(e.target.value);\n});\n\nconst refsBtn = {\n  startPageBtn: document.querySelector('.pagination-buttons'),\n  prevPageBtn: document.querySelector('.prev-page'),\n  nextPageBtn: document.querySelector('.next-page'),\n  endPageBtn: document.querySelector('.end-page'),\n};\n\nrefsBtn.startPageBtn.addEventListener('click', www);\n\nfunction www(e) {\n  console.log(e);\n}\n"],"names":["$1bab9c519cfa82bc$var$refs","paginationBtn","document","querySelector","$1bab9c519cfa82bc$var$pageNumbers","total","max","current","half","Math","floor","to","from","Array","length","min","_","i","$1bab9c519cfa82bc$var$paginationButtons","totalPages","maxPagesVisible","currentPage","pages","currentPageBtn","buttons","Map","disabled1","slice","frag","createDocumentFragment","paginationButtonContainer","createElement","className","update","newPageNumber","forEach","updateButton","btn","createAndSetupButton","label","cls","disabled","handleClick","textContent","addEventListener","e","value","dispatchEvent","CustomEvent","detail","onPageButtonClick","Number","currentTarget","set","map","pageNumber","index","isCurrentPage","button","classList","remove","add","focus","onPageButtonUpdate","appendChild","container","body","handler","$1bab9c519cfa82bc$var$createPagination","render","onChange","console","log","target","startPageBtn","prevPageBtn","nextPageBtn","endPageBtn"],"version":3,"file":"index.22c01956.js.map"}