{"mappings":"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","sources":["src/js/modal-info-film.js","src/js/card-templete.js","src/js/localStorage.js"],"sourcesContent":["import { refs } from '/src/index.js';\nimport { fetchFilmInfo } from \"/src/js/fetch-film-info\";\nimport { cardTemplate } from \"/src/js/card-templete\";\nimport { fetchFilmPopularity } from \"/src/js/fetch-film-popularity\";\nimport { getLocalSt, setLocalSt, remLocalSt } from './localStorage';\nimport Notiflix from 'notiflix';\n// import { add } from 'lodash';\n\n\nconsole.log(refs);\nrefs.list.addEventListener('click', onCardClickOpenModal);\nrefs.closeModalBtn.addEventListener('click', toggleModal);\n\nlet currentPictSrc = \"\";\nfunction onCardClickOpenModal(e) {\n    console.dir(e.target.closest('.film-item img').currentSrc);\n    // console.log(e.target.closest('.film-item'));\n\n    \n\n    currentPictSrc = e.target.closest('.film-item img').currentSrc;\n    console.log(currentPictSrc);\n    const filmTemplateId =e.target.closest('.film-item').id;\n    toggleModal();\n\n    fetchFilmInfo(filmTemplateId).then(respFilmInfo).catch(errorFilmInfo);\n};\n\nfunction respFilmInfo({ data }) {\n  console.log(data);\n  console.log(data.id);\n  // console.log(resp.data.popularity);\n\n  refs.cardList.innerHTML = cardTemplate(data, currentPictSrc);\n\n  //-------------------------------------WATCHED-QUEUE----------------------------------------\n\n  const WATCHED_KEY = 'watched';\n  const QUEUE_KEY = 'queue';\n\n  const addQueue = document.querySelector('.add-queue-btn');\n    const addWatched = document.querySelector('.add-watched-btn');\n\n    // const textModalBtn = async (id) => {\n    //     console.log('im here')\n    //     if (makeArr(data.id, WATCHED_KEY)) {\n    //         addWatched.textContent = \"Added to watched\";\n    //         addWatched.disabled = true;\n\n    //         function changeWatchText() {\n    //             addWatched.disabled = false;\n    //             addWatched.textContent = \"Remove from watched\";\n    //             addWatched.classList.add('active');\n    //         }\n    //         setTimeout(changeWatchText, 1000);\n\n    //     } else {\n    //         addWatched.textContent = \"Add to watched\";\n    //         addWatched.disabled = false;\n    //         addWatched.classList.remove('active');\n    //     }\n    //     if (makeArr(data.id, QUEUE_KEY)) {\n    //       addQueue.textContent = 'Added to queue';\n    //       addQueue.disabled = true;\n\n    //       function changeQueueText() {\n    //         addQueue.disabled = false;\n    //         addQueue.textContent = 'Remove from queue';\n    //         addQueue.classList.add('active');\n    //       }\n    //       setTimeout(changeQueueText, 1000);\n    //     } else {\n    //       addQueue.textContent = 'Add to queue';\n    //       addQueue.disabled = false;\n    //       addQueue.classList.remove('active');\n    //     }\n    // }\n    \n    const makeArr = (id, list) => {\n        let newArr = [];\n        let localArr = getLocalSt(list);\n        if (localArr) {\n            newArr = [...localArr];\n        }\n        const arrSet = new Set(newArr);\n        return arrSet.has(id);\n    }\n\n    const onWatchedModalBtn = (e) => {\n        e.preventDefault();\n        let watchArr = [];\n        const cardObj = data;\n\n      if (addWatched.classList.contains('active')) {\n          console.log(data.id);\n          remLocalSt(WATCHED_KEY);\n\n          let index = watchArr.indexOf(data.id);\n          watchArr.splice(index, 1);\n\n          setLocalSt(WATCHED_KEY, watchArr);\n          Notiflix.Notify.failure('Removed from watched');\n          addWatched.classList.remove('active');\n          return;\n    }\n    watchArr.push(cardObj);\n    const stringedWatchArr = JSON.stringify(watchArr);\n    localStorage.setItem('watched', stringedWatchArr);\n      console.log(stringedWatchArr);\n      addWatched.textContent = \"Remove from watched\";\n      addWatched.classList.add('active');\n  };\n\n  addWatched.addEventListener('click', onWatchedModalBtn);\n    \n    // const WATCHED_KEY = 'watch';\n    // const QUEUE_KEY = 'queue';\n\n    // let watchedMovieArr = [...JSON.parse(localStorage.getItem(WATCHED_KEY))];\n    // let queueMovieArr = [...JSON.parse(localStorage.getItem(QUEUE_KEY))];\n\n    // refs.watchedBtn.addEventListener('click', onWatchedBtnClick);\n    // refs.queueBtn.addEventListener('click', onQueueBtnClick);\n\n    // const onWatchedBtnClick = e => {\n    //   e.preventDefault();\n    //   if (localStorage.getItem(WATCHED_KEY) !== null) {\n    //     Notify.failure('You have watched this movie');\n    //     return;\n    //   }\n    //   watchedMovieArr.push(movie);\n    //   localStorage.setItem(WATCHED_KEY, JSON.stringify(watchedMovieArr));\n    //   Notify.success('You have added this movie to watched');\n    // };\n    // const onQueueBtnClick = e => {\n    //   e.preventDefault();\n    //   if (localStorage.getItem(QUEUE_KEY) !== null) {\n    //     Notify.failure('You have added this movie to queue');\n    //     return;\n    //   }\n    //   queueMovieArr.push(movie);\n    //   localStorage.setItem(QUEUE_KEY, JSON.stringify(queueMovieArr));\n    //   Notify.success('You have added this movie to queue');\n    // };\n\n\n  //------------------------------------WATCHED-QUEUE---------------------------\n\n  window.addEventListener('keydown', onEscCloseModal);\n  refs.modal.addEventListener('click', onOutsideClickCloseModal);\n};\nfunction errorFilmInfo(er) {\n    console.log(er);\n    // fetchFilmPopularity();\n    // refs.cardList.innerHTML = \"Sorry we can't load film data!\";\n    window.addEventListener('keydown', onEscCloseModal);\n    refs.modal.addEventListener('click', onOutsideClickCloseModal);\n};\n\nfunction toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n};\n\n\n\n// ----------------- CLOSE MODAL------------------------------\nfunction onEscCloseModal(e) {\n    if (e.code !== 'Escape') {\n        return;\n    }\n\n    toggleModal();\n    removeAddEventlisteners();\n};\nfunction onOutsideClickCloseModal(e) {\n    // console.log(e.currentTarget);\n    // console.log(e.target);\n    if (e.currentTarget !== e.target) return;\n    toggleModal();\n    removeAddEventlisteners();\n};\nfunction removeAddEventlisteners() {\n    window.removeEventListener('keydown', onEscCloseModal);\n    refs.modal.removeEventListener('click', onOutsideClickCloseModal);\n};\n ","// import { rendserIds } from '/src/index';\n\nconst imgUrl = \"https://image.tmdb.org/t/p/w500/\";\nexport const cardTemplate = ({original_title,vote_average,vote_count,popularity,genres,overview,poster_path},currentPictSrc) =>\n `<li class=\"card-item list\">\n    <div class=\"picture_container\">\n        <img class=\"film-img\" src=\"${poster_path === null?currentPictSrc:imgUrl + poster_path}\">\n    </div>\n\n    <div class=\"modal-textcontainer\">\n    \n        <h2 class=\"film-title\">${original_title}</h2>\n\n        <ul class=\"info-film list\">\n            <li class=\"info_film_left\"><p class=\"text-discription\">Vote / Votes</p></li>\n            <li class=\"info_film_right\"><p class=\"text-discription\"><span class=\"vote-highlighted\">${vote_average.toFixed(1)}</span> / ${vote_count}</p></li>\n\n            <li class=\"info_film_left\"><p class=\"text-discription\">Popularity</p></li>\n            <li class=\"info_film_right\"><p class=\"text-discription\">${popularity}</p></li>\n\n            <li class=\"info_film_left\"><p class=\"text-discription\">Original Title</p></li>\n            <li class=\"info_film_right\"><p class=\"text-discription to-upercase\">${original_title}</p></li>\n\n            <li class=\"info_film_left\"><p class=\"text-discription\">Genre</p></li>\n            <li class=\"info_film_right\"><p class=\"text-discription\">${genres.map(genr=>genr.name).join(', ')}</p></li>\n        </ul>\n\n        <h3 class=\"modal-about to-upercase\">About</h3>\n        <p class=\"modal-overwiew\">${overview}</p>\n       \n\n        <div class=\"modal-btn-list\">\n            \n            <button class=\"add-watched-btn \"watched-btn btn-text-library btn\" type=\"button\">ADD TO WATCHED</button>\n            <button class=\"add-queue-btn btn\" type=\"button\">ADD TO QUEUE</button> \n        </div>\n    </div>\n</li>`;","export const getLocalSt = (key) => {\n    try {\n        const gotten = localStorage.getItem(key);\n        return (JSON.parse(gotten) || undefined);\n    } catch (error) {\n        console.log(\"Error\", error);\n    }\n}\nexport const setLocalSt = (key, value) => {\n  try {\n      const setten = JSON.stringify(value);\n      localStorage.setItem(key, setten);\n    \n  } catch (error) {\n    console.log('Error', error);\n  }\n};\nexport const remLocalSt = (key) => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    console.log('Error', error);\n  }\n};\n"],"names":["parcelRequire","$a3bec48a9323980c$export$f3d44414f0a0d0b1","param","currentPictSrc","original_title","vote_average","vote_count","popularity","genres","overview","poster_path","concat","toFixed","map","genr","name","join","$0aa9cd13c14a6e1e$export$4f7d24935d4f5feb","key","value","setten","JSON","stringify","localStorage","setItem","error","console","log","$0aa9cd13c14a6e1e$export$c98d67ceb3ef1277","removeItem","$fSCrk","refs","list","addEventListener","e","dir","target","closest","currentSrc","$15143f83a0ddf37f$var$currentPictSrc","filmTemplateId","id","$15143f83a0ddf37f$var$toggleModal","$lGS20","fetchFilmInfo","then","$15143f83a0ddf37f$var$respFilmInfo","catch","$15143f83a0ddf37f$var$errorFilmInfo","closeModalBtn","data","cardList","innerHTML","WATCHED_KEY","addWatched","document","querySelector","preventDefault","watchArr","cardObj","classList","contains","index","indexOf","splice","$parcel$interopDefault","$iU1Pc","Notify","failure","remove","push","stringedWatchArr","textContent","add","window","$15143f83a0ddf37f$var$onEscCloseModal","modal","$15143f83a0ddf37f$var$onOutsideClickCloseModal","er","toggle","code","$15143f83a0ddf37f$var$removeAddEventlisteners","currentTarget","removeEventListener"],"version":3,"file":"index.3ea3c5fa.js.map"}